import { NextResponse } from 'next/server';import { connectToDb } from '../../../../lib/server/connection';import { database } from '../../../components/other/variables';import { ObjectId } from 'mongodb';export async function POST(req) {  const { product_Id, user_id } = await req.json();  if (!ObjectId.isValid(product_Id) || !ObjectId.isValid(user_id)) {    return NextResponse.json({ error: 'Vous devez vous connecter d\'abord.', msg: 'noUser' }, { status: 400 });  }  try {    const client = await connectToDb();    const db = client.db(database);    const usersCollection = db.collection('Users');    const productsCollection = db.collection('Products');    let product = await productsCollection.findOne({ _id: new ObjectId(product_Id) });    product = { ...product, quantity: 1 };    if (!product) {      client.close();      return NextResponse.json({ error: 'Produit introuvable.' }, { status: 404 });    }    const user = await usersCollection.findOne({ _id: new ObjectId(user_id) });    if (!user) {      client.close();      return NextResponse.json({ error: 'Utilisateur introuvable.' }, { status: 404 });    }    const productInCart = user.cart.some(item => new ObjectId(item._id).equals(product._id));    if (productInCart) {      client.close();      return NextResponse.json({ error: 'Le produit est déjà dans le panier.' }, { status: 400 });    }    await usersCollection.updateOne(      { _id: new ObjectId(user_id) },      { $push: { cart: product } }    );    client.close();    return NextResponse.json({ message: 'Produit ajouté au panier.' }, { status: 200 });  } catch (error) {    console.error('Erreur lors de l\'ajout du produit au panier:', error);    return NextResponse.json({ error: 'Problème lors de l\'ajout du produit au panier.' }, { status: 500 });  }}